{"version":3,"sources":["actions/CharacterActions.js","components/Search/Search.styles.js","components/Search/Search.js","components/CharacterItem/CharacterItem.styles.js","components/CharacterItem/CharacterItem.js","components/CharactersList/CharactersList.styles.js","components/CharactersList/CharactersList.js","containers/List.js","components/CharacterDetail/CharacterDetail.styles.js","components/CharacterDetail/CharacterDetail.js","containers/Detail.js","components/Layout/Layout.styles.js","components/Layout/Layout.js","App.js","serviceWorker.js","reducers/CharactersList.js","reducers/CharacterItem.js","reducers/index.js","index.js","store/Store.js"],"names":["API_URL","process","SEARCH_CHARACTERS","REQUEST_CHARACTER_ITEM","CHARACTERS_ERROR","searchCharacter","search","dispatch","a","axios","get","replace","res","type","body","data","query","message","response","error","allCharacters","requestCharacterItem","id","character","Container","styled","div","Input","input","Button","button","TextResult","p","Search","onSearchChange","onSearchEmpty","useState","queryText","setQueryText","isSearched","setIsSearched","useEffect","aria-label","name","placeholder","onChange","e","target","value","onClick","preventDefault","Image","img","Name","Description","CharacterItem","to","alt","src","image","origin","status","ContainerGrid","CharactersList","characters","map","connect","state","charactersList","actions","bindActionCreators","Actions","ContainerFlex","Card","Arrow","CharacterDetail","href","species","gender","location","characterItem","useParams","Header","Main","Layout","children","App","path","exact","component","List","Detail","Boolean","window","hostname","match","initialState","rootReducer","combineReducers","results","store","createStore","RootReducer","applyMiddleware","thunk","configureStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.3c308407.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst API_URL = process.env.REACT_APP_API_URL;\n\nconst SEARCH_CHARACTERS = \"SEARCH_CHARACTERS\";\nconst REQUEST_CHARACTER_ITEM = \"REQUEST_CHARACTER_ITEM\";\nconst CHARACTERS_ERROR = \"CHARACTERS_ERROR\";\n\nconst searchCharacter = (search = null) => async (dispatch) => {\n  try {\n    const res = await axios.get(\n      `${API_URL}/character/?name=${search.replace(/\\s/g, \"+\")}`\n    );\n\n    dispatch({\n      type: SEARCH_CHARACTERS,\n      body: res.data,\n      query: search,\n    });\n  } catch (e) {\n    dispatch({\n      type: CHARACTERS_ERROR,\n      message: e.response.data && e.response.data.error,\n    });\n  }\n};\n\nconst allCharacters = () => async (dispatch) => {\n  try {\n    const res = await axios.get(`${API_URL}/character`);\n    dispatch({\n      type: SEARCH_CHARACTERS,\n      body: res.data,\n    });\n  } catch (e) {\n    dispatch({\n      type: CHARACTERS_ERROR,\n      message: e.message,\n    });\n  }\n};\n\nconst requestCharacterItem = (id = null) => async (dispatch) => {\n  try {\n    const res = await axios.get(`${API_URL}/character/${id}`);\n    dispatch({\n      type: REQUEST_CHARACTER_ITEM,\n      body: res.data,\n      character: id,\n    });\n  } catch (e) {\n    dispatch({\n      type: CHARACTERS_ERROR,\n      message: e.message,\n    });\n  }\n};\n\nexport {\n  SEARCH_CHARACTERS,\n  REQUEST_CHARACTER_ITEM,\n  CHARACTERS_ERROR,\n  searchCharacter,\n  allCharacters,\n  requestCharacterItem,\n};\n","import styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100%;\n  text-align: center;\n  margin-bottom: 5rem;\n  position: sticky;\n  top: 0;\n  padding: 1rem;\n  background-color: #ffffff;\n\n  @media (max-width: 480px) {\n    position: unset;\n    padding: 0;\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nconst Input = styled.input`\n  width: 25%;\n  height: 2.5rem;\n  border-radius: 8px;\n  border: 1px solid #d1d1d1;\n  margin-right: 1rem;\n  font-family: \"Roboto\", sans-serif;\n  font-size: 16px;\n  padding-left: 1rem;\n\n  :focus {\n    outline: none;\n    border: 1px solid #585858;\n  }\n\n  @media (max-width: 480px) {\n    width: 100%;\n    padding-left: 0;\n    margin-bottom: 1rem;\n  }\n\n  @media (min-width: 481px) and (max-width: 950px) {\n    width: 40%;\n  }\n`;\n\nconst Button = styled.button`\n  width: 10%;\n  height: 2.6rem;\n  border-radius: 8px;\n  border: none;\n  margin-right: 1rem;\n  background-color: #08a0b0;\n  color: #ffffff;\n  font-family: \"Roboto\", sans-serif;\n  font-size: 16px;\n  font-weight: bold;\n\n  @media (max-width: 480px) {\n    width: 100%;\n  }\n\n  @media (min-width: 481px) and (max-width: 950px) {\n    width: 20%;\n  }\n\n  :focus {\n    outline: none;\n  }\n`;\n\nconst TextResult = styled.p`\n  font-family: \"Roboto\", sans-serif;\n  font-size: 14px;\n`;\n\nexport { Container, Input, Button, TextResult };\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Input, Button, TextResult } from \"./Search.styles\";\n\nconst Search = ({ onSearchChange, onSearchEmpty, error }) => {\n  const [queryText, setQueryText] = useState(\"\");\n  const [isSearched, setIsSearched] = useState(false);\n\n  useEffect(() => {\n    if (queryText === \"\") {\n      onSearchEmpty();\n    }\n  }, [onSearchEmpty, queryText]);\n\n  const onClickSearch = (e) => {\n    e.preventDefault();\n    setIsSearched(true);\n    onSearchChange(queryText);\n  };\n\n  return (\n    <Container>\n      <form>\n        <Input\n          type=\"text\"\n          aria-label=\"name\"\n          name=\"search\"\n          placeholder=\"Busca un personaje\"\n          onChange={(e) => setQueryText(e.target.value)}\n        />\n        <Button type=\"submit\" onClick={onClickSearch}>\n          Buscar\n        </Button>\n      </form>\n      {isSearched && !error && (\n        <TextResult>\n          Resultados para <strong>{queryText}</strong>\n        </TextResult>\n      )}\n\n      {error && isSearched && (\n        <TextResult>{error} - Intenta de nuevo</TextResult>\n      )}\n    </Container>\n  );\n};\n\nSearch.propTypes = {\n  onSearchChange: PropTypes.func,\n  onSearchEmpty: PropTypes.func,\n  error: PropTypes.string,\n};\n\nexport { Search };\n","import styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100%;\n  a:link {\n    text-decoration: none;\n    color: black;\n  }\n  a:visited {\n    text-decoration: none;\n    color: black;\n  }\n\n  a:hover {\n    text-decoration: none;\n  }\n\n  a:active {\n    text-decoration: none;\n  }\n`;\n\nconst Image = styled.img`\n  width: 100%;\n  height: 65%;\n  border-radius: 20px;\n  -webkit-box-shadow: 3px 3px 10px #afc7ce;\n  -moz-box-shadow: 3px 3px 10px #afc7ce;\n  box-shadow: 3px 3px 10px #afc7ce;\n`;\n\nconst Name = styled.p`\n  font-family: \"Roboto\", sans-serif;\n  font-size: 25px;\n  font-weight: bold;\n  text-align: center;\n  margin: 0;\n  margin-top: 0.5rem;\n`;\n\nconst Description = styled.p`\n  font-family: \"Roboto\", sans-serif;\n  font-size: 15px;\n  margin: 0;\n  margin-top: 0.5rem;\n`;\n\nexport { Container, Image, Name, Description };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Image, Name, Description } from \"./CharacterItem.styles\";\n\nconst CharacterItem = ({ character }) => {\n  return (\n    <Container>\n      <Link to={`/character/${character.id}`}>\n        <Image alt={character.id} src={character.image} />\n        <div>\n          <Name>{character.name}</Name>\n          <Description>\n            <strong>Origen:</strong> {character.origin.name}\n          </Description>\n          <Description>\n            <strong>Satatus:</strong> {character.status}\n          </Description>\n        </div>\n      </Link>\n    </Container>\n  );\n};\n\nCharacterItem.propTypes = {\n  character: PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string,\n    image: PropTypes.string,\n    status: PropTypes.string,\n    origin: PropTypes.object,\n  }),\n};\n\nexport { CharacterItem };\n","import styled from \"styled-components\";\n\nconst ContainerGrid = styled.div`\n  display: grid;\n  gap: 2rem;\n  grid-template-columns: 1fr 1fr 1fr;\n\n  @media (max-width: 480px) {\n    grid-template-columns: 1fr;\n  }\n\n  @media (min-width: 481px) and (max-width: 950px) {\n    grid-template-columns: 1fr 1fr;\n  }\n`;\n\nexport { ContainerGrid };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CharacterItem } from \"../CharacterItem\";\nimport { ContainerGrid } from \"./CharactersList.styles\";\n\nconst CharactersList = ({ characters }) => {\n  return (\n    <ContainerGrid>\n      {characters.map((character) => (\n        <CharacterItem key={character.id} character={character} />\n      ))}\n    </ContainerGrid>\n  );\n};\n\nCharactersList.propTypes = {\n  characters: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n      image: PropTypes.string,\n      status: PropTypes.string,\n      origin: PropTypes.object,\n    })\n  ),\n};\n\nexport { CharactersList };\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nimport * as Actions from \"../actions/CharacterActions\";\nimport { Search } from \"../components/Search\";\nimport { CharactersList } from \"../components/CharactersList\";\n\nconst List = ({ actions, characters, error }) => {\n  return (\n    <div>\n      <Search\n        onSearchChange={actions.searchCharacter}\n        onSearchEmpty={actions.allCharacters}\n        error={error}\n      />\n      <CharactersList characters={characters} />\n    </div>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    characters: state.charactersList.data,\n    error: state.charactersList.error,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(Actions, dispatch),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\n","import styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100%;\n  text-align: center;\n`;\n\nconst ContainerFlex = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  align-items: center;\n\n  @media (max-width: 480px) {\n    flex-direction: column;\n  }\n`;\n\nconst Name = styled.p`\n  padding: 0.5rem;\n  font-family: \"Roboto\", sans-serif;\n  font-size: 40px;\n  font-weight: bold;\n`;\n\nconst Image = styled.img`\n  width: 40%;\n  min-width: 280px;\n  margin-right: 1rem;\n\n  @media (max-width: 480px) {\n    width: 100%;\n    margin-right: 0;\n  }\n`;\n\nconst Card = styled.div`\n  width: 40%;\n  min-width: 280px;\n  background-color: #08a0b0;\n  border-radius: 10px;\n  padding: 1rem;\n  -webkit-box-shadow: 3px 3px 10px #afc7ce;\n  -moz-box-shadow: 3px 3px 10px #afc7ce;\n  box-shadow: 3px 3px 10px #afc7ce;\n  color: #ffffff;\n  text-align: left;\n  font-family: \"Shadows Into Light\", cursive;\n  font-size: 18px;\n\n  @media (max-width: 480px) {\n    width: 90%;\n    margin-top: 2rem;\n  }\n`;\n\nconst Arrow = styled.a`\n  width: 100%;\n  background-color: #ffffff;\n  color: #08a0b0;\n  text-align: left;\n  font-family: \"Shadows Into Light\", cursive;\n  font-size: 40px;\n  text-decoration: none;\n`;\n\nexport { Container, Name, Image, Card, ContainerFlex, Arrow };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Container,\n  ContainerFlex,\n  Name,\n  Image,\n  Card,\n  Arrow,\n} from \"./CharacterDetail.styles\";\n\nconst CharacterDetail = ({ character }) => {\n  if (!character) {\n    return <>No data Found</>;\n  }\n  return (\n    <>\n      <Arrow href=\"/\"> &#8592; Regresar</Arrow>\n      <Container>\n        <Name>{character.name && character.name}</Name>\n        <ContainerFlex>\n          <Image src={character.image} alt={character.id} />\n          <Card>\n            <p>\n              <strong>Especie:</strong> {character.species && character.species}\n            </p>\n            <p>\n              <strong>Género:</strong> {character.gender && character.gender}\n            </p>\n            <p>\n              <strong>Estatus:</strong> {character.status && character.status}\n            </p>\n            <p>\n              <strong>Origen: </strong>\n              {character.origin && character.origin.name}\n            </p>\n            <p>\n              <strong>Localización: </strong>\n              {character.location && character.location.name}\n            </p>\n          </Card>\n        </ContainerFlex>\n      </Container>\n    </>\n  );\n};\n\nCharacterDetail.propTypes = {\n  character: PropTypes.shape({\n    name: PropTypes.string,\n    image: PropTypes.string,\n    species: PropTypes.string,\n    gender: PropTypes.string,\n    status: PropTypes.string,\n    origin: PropTypes.object,\n    location: PropTypes.object,\n  }),\n};\n\nexport { CharacterDetail };\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { bindActionCreators } from \"redux\";\n\nimport * as Actions from \"../actions/CharacterActions\";\nimport { CharacterDetail } from \"../components/CharacterDetail\";\n\nconst Detail = ({ actions, characterItem }) => {\n  const { character } = useParams();\n\n  useEffect(() => {\n    actions.requestCharacterItem(character);\n  }, [actions, character]);\n\n  return (\n    <div>\n      <CharacterDetail character={characterItem} />\n    </div>\n  );\n};\n\nfunction mapStateToProps({ characterItem }) {\n  return {\n    characterItem: characterItem.data,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(Actions, dispatch),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Detail);\n","import styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: grid;\n  height: 100vh;\n  grid-template-rows: 1fr 1fr 1fr;\n  grid-template-columns: 1fr;\n  grid-template-areas:\n    \"header\"\n    \"main\";\n\n  @media (max-width: 480px) {\n    grid-template-rows: 1fr;\n  }\n`;\n\nconst Header = styled.div`\n  grid-area: header;\n  text-align: center;\n  font-family: \"Shadows Into Light\", cursive;\n  font-size: 80px;\n  font-weight: bold;\n  color: #08a0b0;\n`;\n\nconst Main = styled.div`\n  grid-area: main;\n  padding: 3rem;\n\n  @media (max-width: 480px) {\n    padding: 1rem;\n  }\n`;\n\nexport { Container, Header, Main };\n","import React from \"react\";\nimport { Container, Header, Main } from \"./Layout.styles\";\nimport PropTypes from \"prop-types\";\n\nconst Layout = ({ children }) => {\n  return (\n    <Container>\n      <Header>Rick and Morty</Header>\n      <Main>{children}</Main>\n    </Container>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node,\n};\n\nexport { Layout };\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport List from \"./containers/List\";\nimport Detail from \"./containers/Detail\";\nimport { Layout } from \"./components/Layout\";\n\nfunction App() {\n  return (\n    <Layout>\n      <Router>\n        <Switch>\n          <Route path={\"/\"} exact component={List} />\n          <Route path={\"/character/:character\"} exact component={Detail} />\n        </Switch>\n      </Router>\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  SEARCH_CHARACTERS,\n  CHARACTERS_ERROR,\n} from \"../actions/CharacterActions\";\n\nconst initialState = {\n  data: [],\n};\n\nexport default function charactersList(\n  state = initialState,\n  { type, body, message }\n) {\n  switch (type) {\n    case SEARCH_CHARACTERS:\n      return {\n        ...state,\n        data: body.results,\n      };\n    case CHARACTERS_ERROR:\n      return {\n        ...state,\n        error: message,\n      };\n    default:\n      return state;\n  }\n}\n","import { REQUEST_CHARACTER_ITEM } from \"../actions/CharacterActions\";\n\nconst initialState = {\n  data: {},\n};\n\nexport default function characterItem(state = initialState, { type, body }) {\n  switch (type) {\n    case REQUEST_CHARACTER_ITEM:\n      return { ...state, data: body };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport CharactersList from \"./CharactersList\";\nimport CharacterItem from \"./CharacterItem\";\n\nconst rootReducer = combineReducers({\n  charactersList: CharactersList,\n  characterItem: CharacterItem,\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport configureStore from \"./store/Store\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n","import { createStore } from \"redux\";\nimport RootReducer from \"../reducers\";\nimport { applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nconst Store = (initialState) => {\n  const store = createStore(RootReducer, initialState, applyMiddleware(thunk));\n\n  return store;\n};\n\nexport default Store;\n"],"sourceRoot":""}